//Class that represents all nodes.

public class Node{
    private float _posX, _posY;
    private float _size;
    private ArrayList<Edge> edges;
    edgeCount = {};

    private int _r, _g, _b;

    Node(float x, float y){
        _posX = x;
        _posY = y;
        _size = 50;
        edges = new ArrayList<Edge>();
        edgeCount = {}
    }

    Node(float x, float y, float size){
        _posX = x;
        _posY = y;
        _size = size;
        edges = new ArrayList<Edge>();
        edgeCount = {}
    }
    
    public void setFill(int r, int g, int b){
        _r = r;
        _g = g;
        _b = b;
    }

    public void setPosition(float x, float y){
        _posX = x;
        _posY = y;
    }

    public float getPositionX(){
        return _posX;
    }

    public float getPositionY(){
        return _posY;
    }

    public float getRadius(){
        return _size/2;
    }

    public float getCenterX(){
        return _posX; //+ (_size/2);
    }

    public float getCenterY(){
        return _posY; //+ (_size/2);
    }

    public ArrayList<Edge> getList(){
        return edges;
    }

    public void addEdge(Edge e){

        edges.add(e);
    }

    public boolean clicked(float x, float y){

        float distance = sqrt(pow((_posX-x), 2) + pow((_posY-y), 2));
        return (distance < (_size/2));
        
    }

    public void displayEdge(){
        for(Edge e: edges){
            e.display();
        }
    }

    public void display(){
        fill(_r, _g, _b);
        
        ellipse(_posX, _posY, _size, _size);
    }
}
